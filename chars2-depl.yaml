# описание persistent volume для хранения БД
apiVersion: v1
kind: PersistentVolume
metadata:
  name: chars2-db-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: '/mnt/chars2-postgres'
---
# Подключение диска PersistentVolume к подам. Абстракция подключения PersistentVolume
# Нам не нужно знать деталей реализации диска. Сосредотачиваемся только на данных связанных с бизнесом (размер, доступы и т.д.)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chars2-db-pvc
spec:
  volumeName: chars2-db-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# описание сервиса, точки доступа к набору подов
apiVersion: v1
kind: Service
metadata:
  name: chars2-srv
spec:
  selector:
    app: chars2
  ports:
    - port: 8115
      protocol: TCP
      targetPort: 80
---
# описание сервиса для базы данных (возможно понадобиться масштабирование)
apiVersion: v1
kind: Service
metadata:
  name: chars2-postgres-srv
spec:
  selector:
    app: chars2-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
# nginx configuration map
apiVersion: v1
kind: ConfigMap
metadata:
  name: "nginx-chars-configmap"
data:
  nginx.conf: |
    server {
        charset utf-8;
        client_max_body_size 128M;
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name chars.com;
        root /var/www/html/public;
        index  index.php;

        access_log /dev/stdout;
        error_log /dev/stderr debug;

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            internal;
        }

        location ~ \.php$ {
            return 404;
        }
    }

---
# Описание deployment конфигурации для базы данных
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chars2-postgres-depl
spec:
  selector:
    matchLabels:
      app: chars2-postgres
  #  replicas: 2
  #  minReadySeconds: 15 # секунды работы, по прошествию которых пода считается доступной
  #  strategy:
  #    type: RollingUpdate # нулевое время простоя системы при обновлении.
  #    rollingUpdate:
  #      maxUnavailable: 1 # задаёт максимальное число недоступных подов (у нас две реплики - поэтому простой сведен к нулю)
  #      maxSurge: 1 # при переходе на новую версию программы, мы можем добавить в кластер ещё один под, что приведёт к тому, что у нас могут быть одновременно запущены до (replicas + 1) подов
  template:
    metadata:
      labels:
        app: chars2-postgres
    spec:
      containers:
        - image: postgres:13
          imagePullPolicy: IfNotPresent # не будет дрочить когда не нужно
          name: postgres-container
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: chars
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: chars2-database-data
      volumes:
        - name: chars2-database-data
          persistentVolumeClaim:
            claimName: chars2-db-pvc
---
# Описание deployment конфигурации приложения
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chars2-app-deployment
spec:
  selector:
    matchLabels:
      app: chars2
  template:
    metadata:
      labels:
        app: chars2
    spec: # pod spec
      # see https://anatlanta.atlassian.net/browse/WEB-2243
      imagePullSecrets:
        - name: regcred
      volumes:
        # диреткория для assets которую генерирует php
        - name: shared-char2-files
          emptyDir: { }
        - name: nginx-chars2-config
          configMap:
            name: nginx-chars-configmap
      containers:
        - name: chars2-php
          image: at1anta/chars2-service:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: shared-char2-files
              mountPath: /var/www/html
          env:
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres@chars2-postgres-srv:5432/chars?serverVersion=13&charset=utf8"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html && chmod -R 777 /var/www/html/var"]
        # restart nginx `nginx -s reload -c /etc/nginx/nginx.conf`
        - name: chars2-nginx
          image: nginx:1.19-alpine
          ports:
            - containerPort: 8115
          imagePullPolicy: Always
          volumeMounts:
            - name: shared-char2-files
              mountPath: /var/www/html
            - name: nginx-chars2-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf

